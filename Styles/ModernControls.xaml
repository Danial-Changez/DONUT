<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Modern TextBox Style (like search bar) -->
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource BodyTextTertiary}" />
        <Setter Property="CaretBrush" Value="{DynamicResource BodyTextTertiary}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BodyTextTertiary}" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="Margin" Value="0,0,0,8" />
    </Style>
    <!-- Modern ComboBox Style -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource BodyTextTertiary}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="Margin" Value="0,0,0,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                            <DockPanel>
                                <ContentPresenter x:Name="ContentSite"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Margin="6,0,0,0" />
                                <ToggleButton x:Name="ToggleButton"
                                    DockPanel.Dock="Right"
                                    Focusable="False"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press"
                                    Background="Transparent"
                                    BorderThickness="0">
                                    <Path x:Name="Arrow" Data="M 0 0 L 8 0 L 4 4 Z" Fill="{DynamicResource AccentBlue}" Width="12" Height="8" Margin="0,0,8,0" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                </ToggleButton>
                            </DockPanel>
                        </Border>
                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Border Background="{DynamicResource PanelBackground}" BorderBrush="{DynamicResource AccentBlue}" BorderThickness="1" CornerRadius="10" MinWidth="{TemplateBinding ActualWidth}">
                                <ScrollViewer CanContentScroll="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AccentPurple}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource AccentPurple}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Modern GroupBox Style -->
    <Style TargetType="GroupBox">
        <Setter Property="Margin" Value="0,0,0,18" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{DynamicResource GroupBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBlue}" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>
    <!-- Modern CheckBox Style -->
    <Style x:Key="ModernCheckBox" TargetType="CheckBox">
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource BodyTextSecondary}" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="box" Width="20" Height="20" CornerRadius="6" BorderThickness="2" BorderBrush="{DynamicResource AccentBlue}" Background="Transparent" VerticalAlignment="Center">
                            <Path x:Name="check" Data="M4,10 L9,15 L16,6" Stroke="{DynamicResource AccentBlue}" StrokeThickness="2.5" Visibility="Collapsed" StrokeEndLineCap="Round" StrokeStartLineCap="Round" />
                        </Border>
                        <ContentPresenter Margin="10,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="box" Property="Background" Value="{DynamicResource AccentBlue}" />
                            <Setter TargetName="check" Property="Visibility" Value="Visible" />
                            <Setter TargetName="check" Property="Stroke" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="box" Property="BorderBrush" Value="{DynamicResource AccentPurple}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Modern Button Style (like searchBtn) -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentPurple}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="38" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="38" CornerRadius="19" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentPurpleHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Scrollbar Styles moved from ButtonStyles.xaml -->
    <Style x:Key="ScrollBarThumb" TargetType="Thumb">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="6" />
        <Setter Property="Background" Value="{DynamicResource PanelBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}" CornerRadius="6" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PanelBackgroundHover}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource PanelBackgroundActive}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="invisibleRepeatButton" TargetType="RepeatButton">
        <Setter Property="Width" Value="0" />
        <Setter Property="Height" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ScrollBar">
        <Setter Property="Width" Value="6" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Bg">
                        <Track x:Name="Part_Track" IsDirectionReversed="True" Margin="0,2,0,2">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource invisibleRepeatButton}" Command="ScrollBar.LineUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource invisibleRepeatButton}" Command="ScrollBar.LineDownCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
