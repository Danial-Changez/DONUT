<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <!-- Menu button -->
        <Style x:Key="menuButton" TargetType="RadioButton">
                <!-- Normal button style -->
                <Setter Property="Height" Value="50" />
                <Setter Property="Margin" Value="-5,0,0,5" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource BodyTextTertiary}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Template">
                        <Setter.Value>
                                <ControlTemplate TargetType="RadioButton">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="4,0,0,0" BorderBrush="{TemplateBinding BorderBrush}">
                                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        </Border>
                                </ControlTemplate>
                        </Setter.Value>
                </Setter>
                <Style.Triggers>
                        <!-- Button style when hovering -->
                        <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Margin" Value="0,0,0,5" />
                                <Setter Property="Background" Value="{DynamicResource PanelBackgroundHover}" />
                                <Setter Property="Foreground" Value="{DynamicResource TitleTextTertiary}" />
                                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <!-- Button style when activated -->
                        <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Margin" Value="0,0,0,5" />
                                <Setter Property="Background" Value="{DynamicResource PanelBackgroundActive}" />
                                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                </Style.Triggers>
        </Style>
        <!-- Menu button icon -->
        <Style x:Key="menuButtonIcon" TargetType="Path">
                <Setter Property="Width" Value="22" />
                <Setter Property="Height" Value="22" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="Margin" Value="35,0,20,0" />
                <Setter Property="Fill" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        </Style>
        <!-- Menu button text -->
        <Style x:Key="menuButtonText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
                <Setter Property="FontFamily" Value="Montserrat" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontSize" Value="13.5" />
                <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <!-- Control bar button -->
        <Style x:Key="controlButton" TargetType="Button">
                <!-- Normal button style -->
                <Setter Property="Width" Value="50" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource BodyTextTertiary}" />
                <Setter Property="Template">
                        <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                </ControlTemplate>
                        </Setter.Value>
                </Setter>
                <Style.Triggers>
                        <!-- Button style when hovering -->
                        <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PanelBackgroundActive}" />
                                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                </Style.Triggers>
        </Style>
        <!-- Control button icon -->
        <Style x:Key="controlButtonIcon" TargetType="Path">
                <Setter Property="Width" Value="10" />
                <Setter Property="Height" Value="10" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        </Style>
        <!-- Icon button -->
        <Style x:Key="iconButton" TargetType="Button">
                <!-- Normal button style -->
                <Setter Property="Width" Value="25" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource BodyTextPrimary}" />
                <Setter Property="Template">
                        <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                </ControlTemplate>
                        </Setter.Value>
                </Setter>
                <Style.Triggers>
                        <!-- Button style when hovering -->
                        <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                </Style.Triggers>
        </Style>
        <!-- Icon button icon (yes bad English I know) -->
        <Style x:Key="iconButtonIcon" TargetType="Path">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        </Style>
</ResourceDictionary>