<File version="3.2">
  <Code><![CDATA[#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
	.SYNOPSIS
		The Main function starts the project application.
	
	.PARAMETER Commandline
		$Commandline contains the complete argument string passed to the script packager executable.
	
	.NOTES
		Use this function to initialize your script and to call GUI forms.
		
	.NOTES
		To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
	# Ensure all scripts run with bypassed execution policy for this process
	Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force
		
	# Get the directory of the current script or host
	$hostPath = [System.IO.Path]::GetDirectoryName($HostInvocation.MyCommand.Path)
	
	# Go up 3 levels: x64 -> bin -> DONUT
	$projectRoot = Split-Path -Path $hostPath -Parent # x64
	$projectRoot = Split-Path -Path $projectRoot -Parent # bin
	$projectRoot = Split-Path -Path $projectRoot -Parent # DONUT
	
	# Now $projectRoot points to project root from DONUT.exe
	$updaterBin = Join-Path -Path $projectRoot -ChildPath 'src\Updater.ps1'
	$mainWindowBin = Join-Path -Path $projectRoot -ChildPath 'src\MainWindow.ps1'
	
	$updater = Join-Path -Path $hostPath -ChildPath 'src\Updater.ps1'
	$mainWindow = Join-Path -Path $hostPath -ChildPath 'src\MainWindow.ps1'
	
	if (Test-Path $updaterBin) { . $updaterBin }
	elseif (Test-Path $updater) { . $updater }
	else { Write-Error "Updater script not found: $updaterBin nor $updater" }
	
	if (Test-Path $mainWindowBin) { . $mainWindowBin }
	elseif (Test-Path $mainWindow) { . $mainWindow }
	else { Write-Error "MainWindow script not found: $mainWindowBin nor $mainWindow" }
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}]]></Code>
  <TV>0</TV>
</File>